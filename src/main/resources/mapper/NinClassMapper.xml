<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.netinnet.coursearrange.mapper.NinClassMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.netinnet.coursearrange.entity.NinClass">
        <id column="id" property="id" />
        <result column="career_id" property="careerId" />
        <result column="class_name" property="className" />
        <result column="people_num" property="peopleNum" />
        <result column="course_num" property="courseNum" />
        <result column="del_flag" property="delFlag" />
        <result column="create_time" property="createTime" />
        <result column="create_user_id" property="createUserId" />
        <result column="modify_time" property="modifyTime" />
        <result column="modify_user_id" property="modifyUserId" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, career_id, class_name, people_num, course_num, del_flag, create_time, create_user_id, modify_time, modify_user_id
    </sql>


<!-- 条件选择查询 -->
    <select id="getSelectList" resultType="cn.netinnet.coursearrange.bo.ClassBo">
        SELECT  nin_career.college AS college,
                nin_class.id AS id,
                nin_class.career_id AS careerId,
                nin_career.career_name AS careerName,
                class_name, people_num, course_num
        FROM nin_class, nin_career
        WHERE nin_class.del_flag = 0
        AND nin_class.career_id = nin_career.id
        <if test="college != null and college != ''">
            AND college = #{college}
        </if>
        <if test="careerId != null">
            AND career_id = #{careerId}
        </if>
        <if test="className != null and className != ''">
            AND class_name LIKE CONCAT('%',#{className},'%')
        </if>
        ORDER BY career_id, class_name
    </select>



<!-- 学院专业班级列表 -->
    <select id="collegeCareerClassList" resultType="cn.netinnet.coursearrange.bo.ClassBo">
        SELECT college, career_name, nin_class.id AS id, class_name
        FROM nin_class INNER JOIN nin_career ON nin_class.career_id = nin_career.id
        WHERE nin_class.career_id != 0
        ORDER BY college, career_id, class_name
    </select>


<!--    //todo 暂时保留-->
    <!-- 班级课程数量+1 -->
    <update id="addBatchCourseNum">
        UPDATE nin_class
        SET course_num = course_num + 1
        WHERE
        <foreach  collection="list" index="index" item="item"  separator="OR">
            id = #{item}
        </foreach>
    </update>

<!--     班级课程数量-1 -->
    <update id="subBatchCourseNum">
        UPDATE nin_class
        SET course_num = course_num - 1
        WHERE
        <foreach collection="list" index="index" item="item"  separator="OR">
            id = #{item}
        </foreach>
    </update>

<!--     班级人数+1 -->
    <update id="addPeopleNum">
        UPDATE nin_class
        SET people_num = people_num + 1
        WHERE id = #{id}
    </update>

<!-- 班级人数-1 -->
    <update id="subPeopleNum">
        UPDATE nin_class
        SET people_num = people_num - 1
        WHERE id = #{id}
    </update>

    <!--批量修改班级的课程数量-->
    <update id="alterBatchCourseNum" parameterType="java.util.List">
        UPDATE nin_class
        SET course_num = CASE
        career_id
        <if test="list != null">
            <foreach collection="list" index="index" item="item" >
                WHEN #{item.careerId} THEN course_num + #{item.courseNum}
            </foreach>
            END
            WHERE career_id IN
            (
            <foreach collection="list" index="index" item="item"  separator=",">
                #{item.careerId}
            </foreach>
            )
        </if>
    </update>

    <!--批量修改班级的人数-->
    <update id="alterBatchPeopleNum">
        UPDATE nin_class
        SET people_num = CASE
        id
        <if test="list != null">
            <foreach collection="list" index="index" item="item" >
                WHEN #{item.classId} THEN people_num  + #{item.peopleNum}
            </foreach>
            END
            WHERE id IN
            (
            <foreach collection="list" index="index" item="item"  separator=",">
                #{item.classId}
            </foreach>
            )
        </if>
    </update>

</mapper>
